# 분류

이진 분류: 두 개의 클래스 중 하나를 선택하는 문제
-> 하나의 뉴런, 시그모이드 활성화 함수 사용
-> 0 or 1의 값을 출력함

다중 분류: 세 개 이상의 클래스 중 하나를 선택하는 문제
-> 클래스 개수와 같은 수의 뉴런, 소프트맥스 활성화 함수 사용
-> 각 클래스에 대한 확률 값 출력

훈련 데이터의 목표값에 레이블이 주어짐
=> 각각의 입력 데이터에 대해 해당하는 정답이 미리 정해져 있는 것
=> 이를 이용하여 모델이 학습을 진행하면서 입력 데이터와 레이블 사이의 관계를 학습하여 새로운 입력 데이터에 대해
   정확한 예측을 할 수 있도록 함
=> 주어지지 않은 경우 -> 비지도 학습, 강화 학습 등을 사용하여 모델 학습

손실함수
- 교차 엔트로피 오차: 예측한 확률 분포와 실제 분포 간의 차이를 계산하는데 사용
 - 엔트로피: 어떤 확률 분포의 불확실성을 나타내는 지표, 작을수록 분포가 확실해짐
 => 값이 작을수록 예측 분포와 실제 분포가 비슷하다는 것을 의미함
 - 이진 => tf.keras.losses.BinaryCrossentropy()
 - 범주형 => tf.keras.losses.CategoricalCrossentropy() - 출력값이 원-핫 인코딩으로 주어지는 경우
	  => tf.keras.losses.SparseCategoricalCrossentropy() - 출력값이 정수 형태로 주어지는 경우

원-핫 인코딩
-> 범주형 데이터를 다룰 때 사용하는 인코딩 방식 중 하나
-> 각 카테고리에 대해 0 또는 1의 값을 가지는 벡터로 표현하는 방식
-> 각 카테고리간의 거리나 유사도 등을 계산할 수 있음

활성화 함수
- 시그모이드 함수 => 출력 값을 0과 1 사이의 값으로 변환하여 이진 분류에서 확률을 나타내는 데 사용
		  => S자 모양의 곡선을 그리며, 입력 값이 커지면 1에 가까워지고, 작아지면 0에 가까워짐
		  => 따라서 시그모이드 함수의 출력 값을 분류 임계값으로 사용하여, 0.5 이상이면 1로, 0.5 미만이면 0으로 분류할 수 있음
		  => tf.keras.activations.sigmoid()
- 소프트맥스 함수 => 출력값을 0과 1 사이의 확률값으로 변환하여 각 클래스에 속할 확률을 추정하는 데 사용
		  => 각 클래스에 대한 예측 확률의 합은 1
		  => 모델이 예측한 클래스는 확률이 가장 높은 클래스로 결정
		  => tf.keras.activations.softmax()

최적화 알고리즘
- 경사하강법

분류 성능평가
- confusion matrix
- 정확도, 정밀도, 재현율

# tf.keras
- 텐서플로에서 제공하는 고수준 딥러닝 API
- 모델을 구성하고 훈련하는 데 필요한 다양한 기능 제공